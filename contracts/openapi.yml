openapi: 3.1.0
info:
  title: todos api
  version: 0.0.1
servers:
  - url: http://localhost:8080/_api
    description: local development server
paths:
  /todos:
    get:
      summary: listing of todos
      description: retrieves all todos
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Todo"
  /todo:
    get:
      summary: get a todo by id
      description: Retrieve a todo by id
      parameters:
        - name: id
          in: query
          description: id of the todo you want to retrieve
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Todo"
        "404":
          description: Not found
          content:
            text/plain: {}
    post:
      summary: create a new todo
      description: creates a new todo
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddTodo"
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: string
    delete:
      summary: delete a todo
      description: delete a todo
      parameters:
        - name: id
          in: query
          description: id of the todo to delete
          required: true
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            text/plain: {}
    put:
      summary: update a todo
      description: updates an existing todo
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Todo"
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Todo"
        400:
          description: Validation Error
          content:
            text/plain: {}
  /todoContent:
    get:
      summary: get the content of a todo by id
      parameters:
        - name: id
          in: query
          description: id of the todo whose content you want to fetch
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            text/plain:
              schema:
                type: string
        "404":
          description: Not found
          content:
            text/plain: {}
components:
  schemas:
    Todo:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        isDone:
          type: boolean
      required:
        - id
        - title
        - isDone
    AddTodo:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
      required:
        - title
        - content
